// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/accounts": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get Merchant Accounts godoc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantAccount"
                ],
                "summary": "Get Merchant Accounts godoc",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Merchant Account ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Merchant Account Code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Merchant Account Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseGetAccounts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Merchant Account By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantAccount"
                ],
                "summary": "Update Merchant Account By Id",
                "parameters": [
                    {
                        "description": "Body Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateMerchantAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseCreateAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": [
                            ""
                        ]
                    }
                ],
                "description": "Create Merchant Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantAccount"
                ],
                "summary": "Create Merchant Account",
                "parameters": [
                    {
                        "description": "Body Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateAccountParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseCreateAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/accounts/members": {
            "get": {
                "description": "Get Merchant Members By Parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantMember"
                ],
                "summary": "Get Merchant Members By Parameters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Merchant Member ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Merchant Account ID",
                        "name": "merchantId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Merchant Member Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Merchant Account Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": " ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseGetMembers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Merchant Member By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantMember"
                ],
                "summary": "Update Merchant Member By Id",
                "parameters": [
                    {
                        "description": "Body Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateMerchantMember"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseCreateMember"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Merchant Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantMember"
                ],
                "summary": "Create Merchant Member",
                "parameters": [
                    {
                        "description": "Body Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateMemberParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseCreateMember"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/accounts/members/{member_id}": {
            "delete": {
                "description": "Delete Merchant Member By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantMember"
                ],
                "summary": "Delete Merchant Member By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Merchant Member ID",
                        "name": "member_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseCreateAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/accounts/{account_id}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": [
                            ""
                        ]
                    }
                ],
                "description": "Delete Merchant Account By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MerchantAccount"
                ],
                "summary": "Delete Merchant Account By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Merchant Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseCreateAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPErrResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.CreateAccountParam": {
            "type": "object",
            "properties": {
                "merchant_code": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "merchant_name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                }
            }
        },
        "entity.CreateMemberParam": {
            "type": "object",
            "properties": {
                "member_email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "member_name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "merchant_id": {
                    "type": "integer"
                }
            }
        },
        "entity.ErrorMessage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "entity.MerchantAccount": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "merchant_code": {
                    "type": "string"
                },
                "merchant_name": {
                    "type": "string"
                },
                "merchant_status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.MerchantMember": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "member_email": {
                    "type": "string"
                },
                "member_name": {
                    "type": "string"
                },
                "member_status": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.MerchantMemberData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "member_email": {
                    "type": "string"
                },
                "member_name": {
                    "type": "string"
                },
                "member_status": {
                    "type": "string"
                },
                "merchant": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MerchantAccount"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Meta": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/entity.ErrorMessage"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "entity.Pagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "cursor_end": {
                    "type": "string"
                },
                "cursor_start": {
                    "description": "TODO improve pagination using cursor",
                    "type": "string"
                },
                "sort_by": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_elements": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "entity.UpdateMerchantAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "merchant_code": {
                    "type": "string"
                },
                "merchant_name": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateMerchantMember": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "member_email": {
                    "type": "string"
                },
                "member_name": {
                    "type": "string"
                }
            }
        },
        "rest.HTTPErrResp": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Meta"
                }
            }
        },
        "rest.ResponseCreateAccount": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MerchantAccount"
                },
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Meta"
                }
            }
        },
        "rest.ResponseCreateMember": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MerchantMember"
                },
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Meta"
                }
            }
        },
        "rest.ResponseGetAccounts": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MerchantAccount"
                    }
                },
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Meta"
                },
                "pagination": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Pagination"
                }
            }
        },
        "rest.ResponseGetMembers": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MerchantMemberData"
                    }
                },
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Meta"
                },
                "pagination": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Pagination"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
